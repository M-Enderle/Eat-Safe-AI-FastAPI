from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
from fastapi import Request

router = APIRouter()


class SearchResult(BaseModel):
    status: str
    imageBase64: str
    name: str
    overall_rating: float


def mock_search(query: str) -> SearchResult:
    # Mocking a search result for demonstration purposes
    return SearchResult(
        status="success",
        imageBase64="""
        name=query,
        overall_rating=4.5,
    )


@router.get("/search", response_model=SearchResult)
async def search_items(request: Request) -> SearchResult:
    """
    Search for items based on the query string.
    """
    # get query from variables
    query = request.query_params.get("query")
    return mock_search(query)